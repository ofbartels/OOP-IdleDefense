@startuml
' Logical View
package "Logical View" {
    class Enemy {
        - image: Image
        - health: int
        - movement_speed: float
        - attack_damage: int
        - position: Point
        + __init__(image: Image, health: int, movement_speed: float, attack_damage: int, position: Point)
        + spawn_at_border(): None
        + move(): None
        + attack(target: Enemy): None
    }

    class BasicEnemy {
        <<subclass>>
    }

    class FastEnemy {
        <<subclass>>
    }

    class TankEnemy {
        <<subclass>>
    }

    class BossEnemy {
        <<subclass>>
    }
}

' Process View
package "Process View" {
    interface EnemySpawner {
        + spawn_basic_enemy(): BasicEnemy
        + spawn_fast_enemy(): FastEnemy
        + spawn_tank_enemy(): TankEnemy
        + spawn_boss_enemy(): BossEnemy
    }

    EnemySpawner <|.. EnemyFactory
    note right of EnemyFactory: "Implements\nEnemySpawner"
}

' Development View
package "Development View" {
    component "Enemy System" {
        class EnemyFactory {
            + spawn_basic_enemy(): BasicEnemy
            + spawn_fast_enemy(): FastEnemy
            + spawn_tank_enemy(): TankEnemy
            + spawn_boss_enemy(): BossEnemy
        }
    }
}


UC1 --> EnemyFactory: spawn_basic_enemy()
UC1 --> EnemyFactory: spawn_fast_enemy()
UC1 --> EnemyFactory: spawn_tank_enemy()
UC1 --> EnemyFactory: spawn_boss_enemy()

@enduml