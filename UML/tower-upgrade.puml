@startuml

' 4+1 Architectural View

' Logical View
package "Logical View" {
    class Tower {
        - range: int
        - damage: int
        - critical_hit_chance: float
        - critical_hit_damage: int
        - health: int
        - damage_negation: int
        + __init__(range: int, damage: int, critical_hit_chance: float, critical_hit_damage: int, health: int, damage_negation: int)
        + add_upgrade(upgrade: Upgrade): None
    }

    class Upgrade {
        - tower: Tower
        + range_upgrade(amount: int): None
        + critical_chance_upgrade(amount: float): None
        + critical_damage_upgrade(amount: int): None
        + damage_upgrade(amount: int): None
        + attack_speed_upgrade(amount: float): None
        + health_upgrade(amount: int): None
        + damage_negation_upgrade(amount: int): None
    }
}

' Development View
package "Development View" {
    component "Tower System" {
        class Tower {
            - range: int
            - damage: int
            - critical_hit_chance: float
            - critical_hit_damage: int
            - health: int
            - damage_negation: int
            + __init__(range: int, damage: int, critical_hit_chance: float, critical_hit_damage: int, health: int, damage_negation: int)
            + add_upgrade(upgrade: Upgrade): None
        }

        class Upgrade {
            - tower: Tower
            + range_upgrade(amount: int): None
            + critical_chance_upgrade(amount: float): None
            + critical_damage_upgrade(amount: int): None
            + damage_upgrade(amount: int): None
            + attack_speed_upgrade(amount: float): None
            + health_upgrade(amount: int): None
            + damage_negation_upgrade(amount: int): None
        }
    }
}


' Process View
package "Process View" {
    interface "User Interface" {
        + display_game_screen(): None
        + handle_user_input(): None
    }

    interface "Game Engine" {
        + update_game_state(): None
        + handle_game_events(): None
    }

    "User Interface" ..> "Game Engine": sends game events
}


UC1 --> Tower: add_upgrade(upgrade)
UC1 --> Upgrade: range_upgrade(amount)
UC1 --> Upgrade: critical_chance_upgrade(amount)
UC1 --> Upgrade: critical_damage_upgrade(amount)
UC1 --> Upgrade: damage_upgrade(amount)
UC1 --> Upgrade: attack_speed_upgrade(amount)
UC1 --> Upgrade: health_upgrade(amount)
UC1 --> Upgrade: damage_negation_upgrade(amount)

@enduml
